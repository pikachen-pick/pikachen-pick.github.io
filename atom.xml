<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>来动力小子家喝杯啤酒吧</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-15T11:42:26.694Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Pikachen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>（随记）一个mysql连接的问题</title>
    <link href="http://example.com/posts/274bc62a.html"/>
    <id>http://example.com/posts/274bc62a.html</id>
    <published>2022-10-15T11:25:26.000Z</published>
    <updated>2022-10-15T11:42:26.694Z</updated>
    
    <content type="html"><![CDATA[<h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p> 今天在做一个Uniapp项目的时候啊，用它给的那个后台Run了一下，发现爆了点小错。<br><img src="/posts/274bc62a/img1.png" alt="img2.png"><br>经过一番百度之后，了解到了如下的信息：</p><div class="tip info"><p>Mysql8.0以后，登录密码的加密方式有所改变，原来走的是“mysql_native_password”，现在是“caching_sha2_password” </p></div><p>再后来才知道，Navicat或者其他的连接池针对这个问题做了优化，这才保证了在你看不到的地方把问题都解决了。</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>更新账户密码的权限即可,随便什么地方新增如下sql脚本，先更改密码加密策略，再刷新权限即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter user &#x27;登录用户名&#x27;@&#x27;地址&#x27; identified with mysql_native_password by &#x27;你的密码&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>妈的，搞定。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt; 今天在做一个Uniapp项目的时候啊，用它给的那个后台Run了一下，发现爆了点小错。&lt;br&gt;&lt;img src=&quot;/posts/27</summary>
      
    
    
    
    
    <category term="Mysql" scheme="http://example.com/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>论Vue2升级到Vue3的琐事（一）</title>
    <link href="http://example.com/posts/7c066ae8.html"/>
    <id>http://example.com/posts/7c066ae8.html</id>
    <published>2022-08-01T12:48:23.000Z</published>
    <updated>2022-08-09T07:11:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容太多，整合梳理需要一些时间"><a href="#内容太多，整合梳理需要一些时间" class="headerlink" title="内容太多，整合梳理需要一些时间"></a>内容太多，整合梳理需要一些时间</h1><h1 id="在写了在写了"><a href="#在写了在写了" class="headerlink" title="在写了在写了"></a>在写了在写了</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;内容太多，整合梳理需要一些时间&quot;&gt;&lt;a href=&quot;#内容太多，整合梳理需要一些时间&quot; class=&quot;headerlink&quot; title=&quot;内容太多，整合梳理需要一些时间&quot;&gt;&lt;/a&gt;内容太多，整合梳理需要一些时间&lt;/h1&gt;&lt;h1 id=&quot;在写了在写了&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/Vue/"/>
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="Vue2" scheme="http://example.com/tags/Vue2/"/>
    
    <category term="Vue3" scheme="http://example.com/tags/Vue3/"/>
    
  </entry>
  
  <entry>
    <title>将Webpack项目转为Vite项目</title>
    <link href="http://example.com/posts/b8f5c976.html"/>
    <id>http://example.com/posts/b8f5c976.html</id>
    <published>2022-07-08T12:59:53.000Z</published>
    <updated>2022-07-09T07:11:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="为什么要用Vite"><a href="#为什么要用Vite" class="headerlink" title="为什么要用Vite"></a>为什么要用Vite</h3><p>传统的Webpack项目打包方式，是将项目中<strong>所有的模块</strong>先打包一遍，再部署到Dev服务器上，随着项目所依赖的模块越来越多，打包的时间也会显著增长，比如说超大规模的项目可能会打包10分钟甚至9分钟，这么久的时间足以带着薪水去解决人生大事。虽说打包时间越长越有助于开发人员<del><strong>摸鱼</strong></del>，但是在大多数情况下这并不利于开发工作。</p><p>目前的浏览器均支持使用原生ESbuild，它使用GO语言编写；得益于GO语言与生俱来的多线程优势，使用ESbuild的打包速度对比Webpack有显著提升。</p><p><a href="https://blog.csdn.net/ligang2585116/article/details/118862283"><img src="/posts/b8f5c976/img1.png" alt="img1.png"></a></p><h6 id="一些主流打包器的速度对比"><a href="#一些主流打包器的速度对比" class="headerlink" title="一些主流打包器的速度对比"></a><center><em>一些主流打包器的速度对比</em><center></center></center></h6><p>Vite正是利用了ESbuild去预构建应用，实际上Vite内部将构建请求通过ESM的方式传送到ESbuild中，再通过一系列强缓存、响应重构的手段以实现快速启动应用，同时通过<strong>按需引用热重载并且缓存该组件</strong>的方式，将处于焦点组件所需的内容实时打包并输出到浏览器。</p><div class="tip warning"><p>用Vite启动项目是很快，但是会改变一些文件的使用方式，也会带来一些潜规则，慢慢掌握即可。</p></div><h3 id="如何改写一个Vue-2项目为Vite项目"><a href="#如何改写一个Vue-2项目为Vite项目" class="headerlink" title="如何改写一个Vue 2项目为Vite项目"></a>如何改写一个Vue 2项目为Vite项目</h3><p>1.首先需要检查Npm版本，安装Vite需要版本为14.18.x或16.x及其更高版本，怎么安装Vite在此就不BB了。</p><p>2检查Vue-router的组件是否为 component: () =&gt; import()的格式引入 <code>很重要</code></p><p>3.安装 <strong>wp2vite</strong>，这是一个将Webpack应用转化为Vite应用的工具，直接安装即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i wp2vite</span><br></pre></td></tr></table></figure><p>4.终端直接输入wp2vite并运行</p><p><img src="/posts/b8f5c976/img2.png" alt="img2.png"></p><p>删除node_modules文件夹，运行npm install，然后使用npm run dev或者npm run vite-start启动项目，不过现在还没搞定，尝试运行项目会发现意料之内的报错，此后便是<strong>报什么错解决什么问题</strong>的环节，会遇到什么问题因项目而定，自行百度即可。</p><p><img src="/posts/b8f5c976/img3.png" alt="img3.png"></p><p>如上图所示，这是一个常见问题，原因在于根目录的vite.config.js文件中define变量中定义了两个’process.env.NODE_ENV’，删去其中一个即可。</p><p>友情链接：<a href="https://vitejs.cn">Vite官网</a> </p>]]></content>
    
    
    <summary type="html">123</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vite" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/Vite/"/>
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vite" scheme="http://example.com/tags/Vite/"/>
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="Webpack" scheme="http://example.com/tags/Webpack/"/>
    
  </entry>
  
</feed>
